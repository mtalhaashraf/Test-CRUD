generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id                                       BigInt        @id @default(autoincrement())
  created_at                               DateTime      @default(now()) @db.Timestamptz(6)
  name                                     String
  updated_at                               DateTime?     @db.Timestamptz(6)
  deleted_at                               DateTime?     @db.Timestamptz(6)
  asset_asset_created_byTouser             asset[]       @relation("asset_created_byTouser")
  asset_asset_deleted_byTouser             asset[]       @relation("asset_deleted_byTouser")
  asset_asset_updated_byTouser             asset[]       @relation("asset_updated_byTouser")
  instruction_instruction_created_byTouser instruction[] @relation("instruction_created_byTouser")
  instruction_instruction_deleted_byTouser instruction[] @relation("instruction_deleted_byTouser")
  instruction_instruction_updated_byTouser instruction[] @relation("instruction_updated_byTouser")
  step_step_created_byTouser               step[]        @relation("step_created_byTouser")
  step_step_deleted_byTouser               step[]        @relation("step_deleted_byTouser")
  step_step_updated_byTouser               step[]        @relation("step_updated_byTouser")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset {
  id                                               BigInt              @id @default(autoincrement())
  created_at                                       DateTime            @default(now()) @db.Timestamptz(6)
  name                                             String
  file                                             String?
  created_by                                       BigInt
  updated_by                                       BigInt?
  deleted_at                                       DateTime?           @db.Timestamptz(6)
  deleted_by                                       BigInt?
  updated_at                                       DateTime?           @db.Timestamptz(6)
  user_asset_created_byTouser                      user                @relation("asset_created_byTouser", fields: [created_by], references: [id])
  user_asset_deleted_byTouser                      user?               @relation("asset_deleted_byTouser", fields: [deleted_by], references: [id], onDelete: Restrict)
  user_asset_updated_byTouser                      user?               @relation("asset_updated_byTouser", fields: [updated_by], references: [id], onDelete: Restrict)
  asset_instruction_asset_instruction_assetToasset asset_instruction[] @relation("asset_instruction_assetToasset")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model asset_instruction {
  id                                                     BigInt      @id @default(autoincrement())
  created_at                                             DateTime    @default(now()) @db.Timestamptz(6)
  asset                                                  BigInt
  instruction                                            BigInt
  asset_asset_instruction_assetToasset                   asset       @relation("asset_instruction_assetToasset", fields: [asset], references: [id], onDelete: Cascade)
  instruction_asset_instruction_instructionToinstruction instruction @relation("asset_instruction_instructionToinstruction", fields: [instruction], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instruction {
  id                                                           BigInt              @id @default(autoincrement())
  created_at                                                   DateTime            @default(now()) @db.Timestamptz(6)
  title                                                        String
  description                                                  String
  duration                                                     BigInt
  preview                                                      String?
  created_by                                                   BigInt
  updated_by                                                   BigInt?
  deleted_by                                                   BigInt?
  deleted_at                                                   DateTime?           @db.Timestamptz(6)
  updated_at                                                   DateTime?           @db.Timestamptz(6)
  asset_instruction_asset_instruction_instructionToinstruction asset_instruction[] @relation("asset_instruction_instructionToinstruction")
  user_instruction_created_byTouser                            user                @relation("instruction_created_byTouser", fields: [created_by], references: [id])
  user_instruction_deleted_byTouser                            user?               @relation("instruction_deleted_byTouser", fields: [deleted_by], references: [id], onDelete: Restrict)
  user_instruction_updated_byTouser                            user?               @relation("instruction_updated_byTouser", fields: [updated_by], references: [id], onDelete: Restrict)
  step                                                         step[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model step {
  id                         BigInt       @id @default(autoincrement())
  created_at                 DateTime     @default(now()) @db.Timestamptz(6)
  type                       step_types
  title                      String
  description                String?
  step_nr                    BigInt
  attached_file              String?
  created_by                 BigInt
  updated_by                 BigInt?
  deleted_by                 BigInt?
  deleted_at                 DateTime?    @db.Timestamptz(6)
  instruction_id             BigInt?
  updated_at                 DateTime?    @db.Timestamptz(6)
  user_step_created_byTouser user         @relation("step_created_byTouser", fields: [created_by], references: [id])
  user_step_deleted_byTouser user?        @relation("step_deleted_byTouser", fields: [deleted_by], references: [id], onDelete: Restrict)
  instruction                instruction? @relation(fields: [instruction_id], references: [id], onDelete: Cascade)
  user_step_updated_byTouser user?        @relation("step_updated_byTouser", fields: [updated_by], references: [id], onDelete: Restrict)
}

enum step_types {
  image
  video
  pdf
  text
}
